# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load your dataset (replace 'heart_disease.csv' with your actual dataset)
data = pd.read_csv('heart_disease.csv')

# Split data into features (X) and target (y)
X = data.drop('target', axis=1)  # Assuming 'target' is the column indicating presence of heart disease
y = data['target']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the classifier (you can choose other algorithms like RandomForestClassifier, SVM, etc.)
clf = DecisionTreeClassifier(random_state=42)

# Train the model
clf.fit(X_train, y_train)

# Make predictions
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

# Print classification report
print(classification_report(y_test, y_pred))

# Example prediction on new data
# Replace the values below with actual data points from your dataset
new_data = [[63, 1, 3, 145, 233, 1, 0, 150, 0, 2.3, 0, 0, 1]]
prediction = clf.predict(new_data)
print(f'Predicted class for new data: {prediction}')
